/*
 *
 *  * Copyright (C) 2017. The Baqla Authors
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  *     http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 */

package com.velevedi.baqla;

import java.util.Map;
import java.util.Set;

/**
 * Immutable unit of data in the Baqla framework. Once created this object can not be changed.
 * Payload is managed as a single unit of the data.
 * If one needs some meta information about the data it must be generated before creating Entry object.
 */
public interface Entry {

    /**
     * All ids are scoped within the Log. To uniquely identify the Entry Log id should be attached.
     * Unique Entry id: "log id.entry id"
     * @return id of the entry within the Log
     */
    long id();

    /**
     * Entry can expose meta information about it
     * @return meta information about the payload object
     */
    Map<String, Object> meta();

    /**
     * Id of the task that created this entry to store in the Log
     * @return task id
     */
    String taskId();

    /**
     * Payload object that has been generated by a task. It will be used for the upstream tasks.
     * This object is taken as is and no parsing will be done in case a search is required.
     * Use meta information for search/filtering operations.
     * @return payload object
     */
    Object payload();

    /**
     * Tasks generate output which is being stored in the log in the form of Entry object.
     * Each task uses data calculated on the previous steps. This method returns a set of
     * tasks identifiers that have been used to calculate payload object stored in this Entry.
     * Set returned by this method can be empty if the task is a source of the data and no previous
     * calculations have been performed.
     * @return set of task ids used to calculate payload object
     */
    Set<String> inputIds();

}                                                      
